                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 23 2015) (CYGWIN)
                              4 ; This file was generated Fri Oct 23 22:07:50 2015
                              5 ;--------------------------------------------------------
                              6 	.module Menus
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_drawStringM1
                             14 	.globl _cpct_drawSolidBox
                             15 	.globl _cpct_px2byteM1
                             16 	.globl _cpct_isKeyPressed
                             17 	.globl _cpct_scanKeyboard
                             18 	.globl _cpct_memset
                             19 	.globl _menuInicio
                             20 	.globl _menuGameOver
                             21 	.globl _pintaInicio
                             22 	.globl _pintaCreditos
                             23 	.globl _pintaControles
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;src/Menus.c:3: void menuInicio(){
                             56 ;	---------------------------------
                             57 ; Function menuInicio
                             58 ; ---------------------------------
   0000                      59 _menuInicio::
                             60 ;src/Menus.c:4: pintaInicio();
   0000 CDrD3r00      [17]   61 	call	_pintaInicio
                             62 ;src/Menus.c:5: while(1){
   0003                      63 00113$:
                             64 ;src/Menus.c:6: cpct_scanKeyboard();
   0003 CDr00r00      [17]   65 	call	_cpct_scanKeyboard
                             66 ;src/Menus.c:7: if(cpct_isKeyPressed(Key_1)){
   0006 21 08 01      [10]   67 	ld	hl,#0x0108
   0009 CDr00r00      [17]   68 	call	_cpct_isKeyPressed
   000C 7D            [ 4]   69 	ld	a,l
   000D B7            [ 4]   70 	or	a, a
   000E C0            [11]   71 	ret	NZ
                             72 ;src/Menus.c:10: else if(cpct_isKeyPressed(Key_2)){
   000F 21 08 02      [10]   73 	ld	hl,#0x0208
   0012 CDr00r00      [17]   74 	call	_cpct_isKeyPressed
   0015 7D            [ 4]   75 	ld	a,l
   0016 B7            [ 4]   76 	or	a, a
   0017 28 05         [12]   77 	jr	Z,00107$
                             78 ;src/Menus.c:11: pintaControles();
   0019 CDr31r03      [17]   79 	call	_pintaControles
   001C 18 E5         [12]   80 	jr	00113$
   001E                      81 00107$:
                             82 ;src/Menus.c:13: else if(cpct_isKeyPressed(Key_3)){
   001E 21 07 02      [10]   83 	ld	hl,#0x0207
   0021 CDr00r00      [17]   84 	call	_cpct_isKeyPressed
   0024 7D            [ 4]   85 	ld	a,l
   0025 B7            [ 4]   86 	or	a, a
   0026 28 05         [12]   87 	jr	Z,00104$
                             88 ;src/Menus.c:14: pintaCreditos();
   0028 CDr8Br02      [17]   89 	call	_pintaCreditos
   002B 18 D6         [12]   90 	jr	00113$
   002D                      91 00104$:
                             92 ;src/Menus.c:16: else if(cpct_isKeyPressed(Key_5)){
   002D 21 06 02      [10]   93 	ld	hl,#0x0206
   0030 CDr00r00      [17]   94 	call	_cpct_isKeyPressed
   0033 7D            [ 4]   95 	ld	a,l
   0034 B7            [ 4]   96 	or	a, a
   0035 28 CC         [12]   97 	jr	Z,00113$
                             98 ;src/Menus.c:17: pintaInicio();
   0037 CDrD3r00      [17]   99 	call	_pintaInicio
   003A 18 C7         [12]  100 	jr	00113$
                            101 ;src/Menus.c:21: void menuGameOver(){
                            102 ;	---------------------------------
                            103 ; Function menuGameOver
                            104 ; ---------------------------------
   003C                     105 _menuGameOver::
                            106 ;src/Menus.c:23: memPtr=cpct_getScreenPtr(video_memory_start,13,33);
   003C ED 5Br00r00   [20]  107 	ld	de,(_video_memory_start)
   0040 21 0D 21      [10]  108 	ld	hl,#0x210D
   0043 E5            [11]  109 	push	hl
   0044 D5            [11]  110 	push	de
   0045 CDr00r00      [17]  111 	call	_cpct_getScreenPtr
                            112 ;src/Menus.c:24: cpct_drawSolidBox(memPtr, cpct_px2byteM1(1,1,1,1),52,132);
   0048 E5            [11]  113 	push	hl
   0049 21 01 01      [10]  114 	ld	hl,#0x0101
   004C E5            [11]  115 	push	hl
   004D 2E 01         [ 7]  116 	ld	l, #0x01
   004F E5            [11]  117 	push	hl
   0050 CDr00r00      [17]  118 	call	_cpct_px2byteM1
   0053 F1            [10]  119 	pop	af
   0054 F1            [10]  120 	pop	af
   0055 45            [ 4]  121 	ld	b,l
   0056 D1            [10]  122 	pop	de
   0057 21 34 84      [10]  123 	ld	hl,#0x8434
   005A E5            [11]  124 	push	hl
   005B C5            [11]  125 	push	bc
   005C 33            [ 6]  126 	inc	sp
   005D D5            [11]  127 	push	de
   005E CDr00r00      [17]  128 	call	_cpct_drawSolidBox
   0061 F1            [10]  129 	pop	af
   0062 F1            [10]  130 	pop	af
   0063 33            [ 6]  131 	inc	sp
                            132 ;src/Menus.c:25: memPtr=cpct_getScreenPtr(video_memory_start,26,66);
   0064 ED 5Br00r00   [20]  133 	ld	de,(_video_memory_start)
   0068 21 1A 42      [10]  134 	ld	hl,#0x421A
   006B E5            [11]  135 	push	hl
   006C D5            [11]  136 	push	de
   006D CDr00r00      [17]  137 	call	_cpct_getScreenPtr
                            138 ;src/Menus.c:26: cpct_drawStringM1("Has muerto :'(", memPtr, 3, 1);
   0070 EB            [ 4]  139 	ex	de,hl
   0071 01rB1r00      [10]  140 	ld	bc,#___str_0+0
   0074 21 03 01      [10]  141 	ld	hl,#0x0103
   0077 E5            [11]  142 	push	hl
   0078 D5            [11]  143 	push	de
   0079 C5            [11]  144 	push	bc
   007A CDr00r00      [17]  145 	call	_cpct_drawStringM1
   007D 21 06 00      [10]  146 	ld	hl,#6
   0080 39            [11]  147 	add	hl,sp
   0081 F9            [ 6]  148 	ld	sp,hl
                            149 ;src/Menus.c:27: memPtr=cpct_getScreenPtr(video_memory_start,26,74);
   0082 ED 5Br00r00   [20]  150 	ld	de,(_video_memory_start)
   0086 21 1A 4A      [10]  151 	ld	hl,#0x4A1A
   0089 E5            [11]  152 	push	hl
   008A D5            [11]  153 	push	de
   008B CDr00r00      [17]  154 	call	_cpct_getScreenPtr
                            155 ;src/Menus.c:28: cpct_drawStringM1("Pulsa K para jugar", memPtr, 3, 1);
   008E EB            [ 4]  156 	ex	de,hl
   008F 01rC0r00      [10]  157 	ld	bc,#___str_1+0
   0092 21 03 01      [10]  158 	ld	hl,#0x0103
   0095 E5            [11]  159 	push	hl
   0096 D5            [11]  160 	push	de
   0097 C5            [11]  161 	push	bc
   0098 CDr00r00      [17]  162 	call	_cpct_drawStringM1
   009B 21 06 00      [10]  163 	ld	hl,#6
   009E 39            [11]  164 	add	hl,sp
   009F F9            [ 6]  165 	ld	sp,hl
                            166 ;src/Menus.c:29: while(1){
   00A0                     167 00104$:
                            168 ;src/Menus.c:30: cpct_scanKeyboard();
   00A0 CDr00r00      [17]  169 	call	_cpct_scanKeyboard
                            170 ;src/Menus.c:31: if(cpct_isKeyPressed(Key_K)){
   00A3 21 04 20      [10]  171 	ld	hl,#0x2004
   00A6 CDr00r00      [17]  172 	call	_cpct_isKeyPressed
   00A9 7D            [ 4]  173 	ld	a,l
   00AA B7            [ 4]  174 	or	a, a
   00AB 28 F3         [12]  175 	jr	Z,00104$
                            176 ;src/Menus.c:32: menuInicio();
   00AD CDr00r00      [17]  177 	call	_menuInicio
                            178 ;src/Menus.c:33: break;
   00B0 C9            [10]  179 	ret
   00B1                     180 ___str_0:
   00B1 48 61 73 20 6D 75   181 	.ascii "Has muerto :'("
        65 72 74 6F 20 3A
        27 28
   00BF 00                  182 	.db 0x00
   00C0                     183 ___str_1:
   00C0 50 75 6C 73 61 20   184 	.ascii "Pulsa K para jugar"
        4B 20 70 61 72 61
        20 6A 75 67 61 72
   00D2 00                  185 	.db 0x00
                            186 ;src/Menus.c:37: void pintaInicio(){
                            187 ;	---------------------------------
                            188 ; Function pintaInicio
                            189 ; ---------------------------------
   00D3                     190 _pintaInicio::
   00D3 DD E5         [15]  191 	push	ix
   00D5 DD 21 00 00   [14]  192 	ld	ix,#0
   00D9 DD 39         [15]  193 	add	ix,sp
   00DB 21 F7 FF      [10]  194 	ld	hl,#-9
   00DE 39            [11]  195 	add	hl,sp
   00DF F9            [ 6]  196 	ld	sp,hl
                            197 ;src/Menus.c:39: char const *s0=" ___ __      _    _  _     _      __  _ ";
                            198 ;src/Menus.c:40: char const *s1="  | |  || | |    |  | ||  | || | |  ||  ";
                            199 ;src/Menus.c:41: char const *s2="  | |__|| | |-   |  | ||  | || | |__||_ ";
                            200 ;src/Menus.c:42: char const *s3="  | | | |_| |_   |_ |_||_ |_||_| | |  _|";
                            201 ;src/Menus.c:43: char const * titulo[]={s0,s1,s2,s3};   //68
   00E0 21 00 00      [10]  202 	ld	hl,#0x0000
   00E3 39            [11]  203 	add	hl,sp
   00E4 5D            [ 4]  204 	ld	e,l
   00E5 54            [ 4]  205 	ld	d,h
   00E6 36rC8         [10]  206 	ld	(hl),#<(___str_2)
   00E8 23            [ 6]  207 	inc	hl
   00E9 36s01         [10]  208 	ld	(hl),#>(___str_2)
   00EB 6B            [ 4]  209 	ld	l, e
   00EC 62            [ 4]  210 	ld	h, d
   00ED 23            [ 6]  211 	inc	hl
   00EE 23            [ 6]  212 	inc	hl
   00EF 36rF1         [10]  213 	ld	(hl),#<(___str_3)
   00F1 23            [ 6]  214 	inc	hl
   00F2 36s01         [10]  215 	ld	(hl),#>(___str_3)
   00F4 21 04 00      [10]  216 	ld	hl,#0x0004
   00F7 19            [11]  217 	add	hl,de
   00F8 36r1A         [10]  218 	ld	(hl),#<(___str_4)
   00FA 23            [ 6]  219 	inc	hl
   00FB 36s02         [10]  220 	ld	(hl),#>(___str_4)
   00FD 21 06 00      [10]  221 	ld	hl,#0x0006
   0100 19            [11]  222 	add	hl,de
   0101 36r43         [10]  223 	ld	(hl),#<(___str_5)
   0103 23            [ 6]  224 	inc	hl
   0104 36s02         [10]  225 	ld	(hl),#>(___str_5)
                            226 ;src/Menus.c:44: cpct_clearScreen(cpct_px2byteM1(1,1,1,1));
   0106 D5            [11]  227 	push	de
   0107 21 01 01      [10]  228 	ld	hl,#0x0101
   010A E5            [11]  229 	push	hl
   010B 2E 01         [ 7]  230 	ld	l, #0x01
   010D E5            [11]  231 	push	hl
   010E CDr00r00      [17]  232 	call	_cpct_px2byteM1
   0111 F1            [10]  233 	pop	af
   0112 F1            [10]  234 	pop	af
   0113 65            [ 4]  235 	ld	h,l
   0114 01 00 40      [10]  236 	ld	bc,#0x4000
   0117 C5            [11]  237 	push	bc
   0118 E5            [11]  238 	push	hl
   0119 33            [ 6]  239 	inc	sp
   011A 21 00 C0      [10]  240 	ld	hl,#0xC000
   011D E5            [11]  241 	push	hl
   011E CDr00r00      [17]  242 	call	_cpct_memset
   0121 D1            [10]  243 	pop	de
                            244 ;src/Menus.c:46: for(a=0;a<4;a++){
   0122 DD 36 FF 00   [19]  245 	ld	-1 (ix),#0x00
   0126                     246 00102$:
                            247 ;src/Menus.c:47: memPtr=cpct_getScreenPtr(video_memory_start,0,8*a);
   0126 DD 7E FF      [19]  248 	ld	a,-1 (ix)
   0129 07            [ 4]  249 	rlca
   012A 07            [ 4]  250 	rlca
   012B 07            [ 4]  251 	rlca
   012C E6 F8         [ 7]  252 	and	a,#0xF8
   012E 67            [ 4]  253 	ld	h,a
   012F ED 4Br00r00   [20]  254 	ld	bc,(_video_memory_start)
   0133 D5            [11]  255 	push	de
   0134 E5            [11]  256 	push	hl
   0135 33            [ 6]  257 	inc	sp
   0136 AF            [ 4]  258 	xor	a, a
   0137 F5            [11]  259 	push	af
   0138 33            [ 6]  260 	inc	sp
   0139 C5            [11]  261 	push	bc
   013A CDr00r00      [17]  262 	call	_cpct_getScreenPtr
   013D D1            [10]  263 	pop	de
   013E E5            [11]  264 	push	hl
   013F FD E1         [14]  265 	pop	iy
                            266 ;src/Menus.c:48: cpct_drawStringM1(titulo[a], memPtr, 0, 1);
   0141 DD 6E FF      [19]  267 	ld	l,-1 (ix)
   0144 26 00         [ 7]  268 	ld	h,#0x00
   0146 29            [11]  269 	add	hl, hl
   0147 19            [11]  270 	add	hl,de
   0148 4E            [ 7]  271 	ld	c,(hl)
   0149 23            [ 6]  272 	inc	hl
   014A 46            [ 7]  273 	ld	b,(hl)
   014B D5            [11]  274 	push	de
   014C 21 00 01      [10]  275 	ld	hl,#0x0100
   014F E5            [11]  276 	push	hl
   0150 FD E5         [15]  277 	push	iy
   0152 C5            [11]  278 	push	bc
   0153 CDr00r00      [17]  279 	call	_cpct_drawStringM1
   0156 21 06 00      [10]  280 	ld	hl,#6
   0159 39            [11]  281 	add	hl,sp
   015A F9            [ 6]  282 	ld	sp,hl
   015B D1            [10]  283 	pop	de
                            284 ;src/Menus.c:46: for(a=0;a<4;a++){
   015C DD 34 FF      [23]  285 	inc	-1 (ix)
   015F DD 7E FF      [19]  286 	ld	a,-1 (ix)
   0162 D6 04         [ 7]  287 	sub	a, #0x04
   0164 38 C0         [12]  288 	jr	C,00102$
                            289 ;src/Menus.c:51: memPtr=cpct_getScreenPtr(video_memory_start,4,8*11);
   0166 ED 5Br00r00   [20]  290 	ld	de,(_video_memory_start)
   016A 21 04 58      [10]  291 	ld	hl,#0x5804
   016D E5            [11]  292 	push	hl
   016E D5            [11]  293 	push	de
   016F CDr00r00      [17]  294 	call	_cpct_getScreenPtr
                            295 ;src/Menus.c:52: cpct_drawStringM1("1-JUGAR", memPtr, 3, 1);
   0172 4D            [ 4]  296 	ld	c, l
   0173 44            [ 4]  297 	ld	b, h
   0174 11r6Cr02      [10]  298 	ld	de,#___str_6
   0177 21 03 01      [10]  299 	ld	hl,#0x0103
   017A E5            [11]  300 	push	hl
   017B C5            [11]  301 	push	bc
   017C D5            [11]  302 	push	de
   017D CDr00r00      [17]  303 	call	_cpct_drawStringM1
   0180 21 06 00      [10]  304 	ld	hl,#6
   0183 39            [11]  305 	add	hl,sp
   0184 F9            [ 6]  306 	ld	sp,hl
                            307 ;src/Menus.c:53: memPtr=cpct_getScreenPtr(video_memory_start,4,8*13);
   0185 ED 5Br00r00   [20]  308 	ld	de,(_video_memory_start)
   0189 21 04 68      [10]  309 	ld	hl,#0x6804
   018C E5            [11]  310 	push	hl
   018D D5            [11]  311 	push	de
   018E CDr00r00      [17]  312 	call	_cpct_getScreenPtr
                            313 ;src/Menus.c:54: cpct_drawStringM1("2-CONTROLES", memPtr, 3, 1);
   0191 4D            [ 4]  314 	ld	c, l
   0192 44            [ 4]  315 	ld	b, h
   0193 11r74r02      [10]  316 	ld	de,#___str_7
   0196 21 03 01      [10]  317 	ld	hl,#0x0103
   0199 E5            [11]  318 	push	hl
   019A C5            [11]  319 	push	bc
   019B D5            [11]  320 	push	de
   019C CDr00r00      [17]  321 	call	_cpct_drawStringM1
   019F 21 06 00      [10]  322 	ld	hl,#6
   01A2 39            [11]  323 	add	hl,sp
   01A3 F9            [ 6]  324 	ld	sp,hl
                            325 ;src/Menus.c:55: memPtr=cpct_getScreenPtr(video_memory_start,4,8*15);
   01A4 ED 5Br00r00   [20]  326 	ld	de,(_video_memory_start)
   01A8 21 04 78      [10]  327 	ld	hl,#0x7804
   01AB E5            [11]  328 	push	hl
   01AC D5            [11]  329 	push	de
   01AD CDr00r00      [17]  330 	call	_cpct_getScreenPtr
                            331 ;src/Menus.c:56: cpct_drawStringM1("3-CREDITOS", memPtr, 3, 1);
   01B0 4D            [ 4]  332 	ld	c, l
   01B1 44            [ 4]  333 	ld	b, h
   01B2 11r80r02      [10]  334 	ld	de,#___str_8
   01B5 21 03 01      [10]  335 	ld	hl,#0x0103
   01B8 E5            [11]  336 	push	hl
   01B9 C5            [11]  337 	push	bc
   01BA D5            [11]  338 	push	de
   01BB CDr00r00      [17]  339 	call	_cpct_drawStringM1
   01BE 21 06 00      [10]  340 	ld	hl,#6
   01C1 39            [11]  341 	add	hl,sp
   01C2 F9            [ 6]  342 	ld	sp,hl
   01C3 DD F9         [10]  343 	ld	sp, ix
   01C5 DD E1         [14]  344 	pop	ix
   01C7 C9            [10]  345 	ret
   01C8                     346 ___str_2:
   01C8 20 5F 5F 5F 20 5F   347 	.ascii " ___ __      _    _  _     _      __  _ "
        5F 20 20 20 20 20
        20 5F 20 20 20 20
        5F 20 20 5F 20 20
        20 20 20 5F 20 20
        20 20 20 20 5F 5F
        20 20 5F 20
   01F0 00                  348 	.db 0x00
   01F1                     349 ___str_3:
   01F1 20 20 7C 20 7C 20   350 	.ascii "  | |  || | |    |  | ||  | || | |  ||  "
        20 7C 7C 20 7C 20
        7C 20 20 20 20 7C
        20 20 7C 20 7C 7C
        20 20 7C 20 7C 7C
        20 7C 20 7C 20 20
        7C 7C 20 20
   0219 00                  351 	.db 0x00
   021A                     352 ___str_4:
   021A 20 20 7C 20 7C 5F   353 	.ascii "  | |__|| | |-   |  | ||  | || | |__||_ "
        5F 7C 7C 20 7C 20
        7C 2D 20 20 20 7C
        20 20 7C 20 7C 7C
        20 20 7C 20 7C 7C
        20 7C 20 7C 5F 5F
        7C 7C 5F 20
   0242 00                  354 	.db 0x00
   0243                     355 ___str_5:
   0243 20 20 7C 20 7C 20   356 	.ascii "  | | | |_| |_   |_ |_||_ |_||_| | |  _|"
        7C 20 7C 5F 7C 20
        7C 5F 20 20 20 7C
        5F 20 7C 5F 7C 7C
        5F 20 7C 5F 7C 7C
        5F 7C 20 7C 20 7C
        20 20 5F 7C
   026B 00                  357 	.db 0x00
   026C                     358 ___str_6:
   026C 31 2D 4A 55 47 41   359 	.ascii "1-JUGAR"
        52
   0273 00                  360 	.db 0x00
   0274                     361 ___str_7:
   0274 32 2D 43 4F 4E 54   362 	.ascii "2-CONTROLES"
        52 4F 4C 45 53
   027F 00                  363 	.db 0x00
   0280                     364 ___str_8:
   0280 33 2D 43 52 45 44   365 	.ascii "3-CREDITOS"
        49 54 4F 53
   028A 00                  366 	.db 0x00
                            367 ;src/Menus.c:58: void pintaCreditos(){
                            368 ;	---------------------------------
                            369 ; Function pintaCreditos
                            370 ; ---------------------------------
   028B                     371 _pintaCreditos::
                            372 ;src/Menus.c:60: memPtr=cpct_getScreenPtr(video_memory_start,4,8*11);
   028B ED 5Br00r00   [20]  373 	ld	de,(_video_memory_start)
   028F 21 04 58      [10]  374 	ld	hl,#0x5804
   0292 E5            [11]  375 	push	hl
   0293 D5            [11]  376 	push	de
   0294 CDr00r00      [17]  377 	call	_cpct_getScreenPtr
                            378 ;src/Menus.c:61: cpct_drawSolidBox(memPtr, cpct_px2byteM1(1,1,1,1), 22, 7*7);
   0297 E5            [11]  379 	push	hl
   0298 21 01 01      [10]  380 	ld	hl,#0x0101
   029B E5            [11]  381 	push	hl
   029C 2E 01         [ 7]  382 	ld	l, #0x01
   029E E5            [11]  383 	push	hl
   029F CDr00r00      [17]  384 	call	_cpct_px2byteM1
   02A2 F1            [10]  385 	pop	af
   02A3 F1            [10]  386 	pop	af
   02A4 55            [ 4]  387 	ld	d,l
   02A5 C1            [10]  388 	pop	bc
   02A6 C5            [11]  389 	push	bc
   02A7 21 16 31      [10]  390 	ld	hl,#0x3116
   02AA E5            [11]  391 	push	hl
   02AB D5            [11]  392 	push	de
   02AC 33            [ 6]  393 	inc	sp
   02AD C5            [11]  394 	push	bc
   02AE CDr00r00      [17]  395 	call	_cpct_drawSolidBox
   02B1 F1            [10]  396 	pop	af
   02B2 F1            [10]  397 	pop	af
   02B3 33            [ 6]  398 	inc	sp
   02B4 C1            [10]  399 	pop	bc
                            400 ;src/Menus.c:62: cpct_drawStringM1("Creado por Alex Verdu y Manuel Gomez", memPtr, 3, 1);
   02B5 11rE6r02      [10]  401 	ld	de,#___str_9
   02B8 21 03 01      [10]  402 	ld	hl,#0x0103
   02BB E5            [11]  403 	push	hl
   02BC C5            [11]  404 	push	bc
   02BD D5            [11]  405 	push	de
   02BE CDr00r00      [17]  406 	call	_cpct_drawStringM1
   02C1 21 06 00      [10]  407 	ld	hl,#6
   02C4 39            [11]  408 	add	hl,sp
   02C5 F9            [ 6]  409 	ld	sp,hl
                            410 ;src/Menus.c:63: memPtr=cpct_getScreenPtr(video_memory_start,4,120);
   02C6 ED 5Br00r00   [20]  411 	ld	de,(_video_memory_start)
   02CA 21 04 78      [10]  412 	ld	hl,#0x7804
   02CD E5            [11]  413 	push	hl
   02CE D5            [11]  414 	push	de
   02CF CDr00r00      [17]  415 	call	_cpct_getScreenPtr
                            416 ;src/Menus.c:64: cpct_drawStringM1("Pulsa 5 para volver al menu principal", memPtr, 3, 1);
   02D2 4D            [ 4]  417 	ld	c, l
   02D3 44            [ 4]  418 	ld	b, h
   02D4 11r0Br03      [10]  419 	ld	de,#___str_10
   02D7 21 03 01      [10]  420 	ld	hl,#0x0103
   02DA E5            [11]  421 	push	hl
   02DB C5            [11]  422 	push	bc
   02DC D5            [11]  423 	push	de
   02DD CDr00r00      [17]  424 	call	_cpct_drawStringM1
   02E0 21 06 00      [10]  425 	ld	hl,#6
   02E3 39            [11]  426 	add	hl,sp
   02E4 F9            [ 6]  427 	ld	sp,hl
   02E5 C9            [10]  428 	ret
   02E6                     429 ___str_9:
   02E6 43 72 65 61 64 6F   430 	.ascii "Creado por Alex Verdu y Manuel Gomez"
        20 70 6F 72 20 41
        6C 65 78 20 56 65
        72 64 75 20 79 20
        4D 61 6E 75 65 6C
        20 47 6F 6D 65 7A
   030A 00                  431 	.db 0x00
   030B                     432 ___str_10:
   030B 50 75 6C 73 61 20   433 	.ascii "Pulsa 5 para volver al menu principal"
        35 20 70 61 72 61
        20 76 6F 6C 76 65
        72 20 61 6C 20 6D
        65 6E 75 20 70 72
        69 6E 63 69 70 61
        6C
   0330 00                  434 	.db 0x00
                            435 ;src/Menus.c:66: void pintaControles(){
                            436 ;	---------------------------------
                            437 ; Function pintaControles
                            438 ; ---------------------------------
   0331                     439 _pintaControles::
                            440 ;src/Menus.c:68: memPtr=cpct_getScreenPtr(video_memory_start,4,8*11);
   0331 ED 5Br00r00   [20]  441 	ld	de,(_video_memory_start)
   0335 21 04 58      [10]  442 	ld	hl,#0x5804
   0338 E5            [11]  443 	push	hl
   0339 D5            [11]  444 	push	de
   033A CDr00r00      [17]  445 	call	_cpct_getScreenPtr
                            446 ;src/Menus.c:69: cpct_drawSolidBox(memPtr, cpct_px2byteM1(1,1,1,1), 22, 7*7);
   033D E5            [11]  447 	push	hl
   033E 21 01 01      [10]  448 	ld	hl,#0x0101
   0341 E5            [11]  449 	push	hl
   0342 2E 01         [ 7]  450 	ld	l, #0x01
   0344 E5            [11]  451 	push	hl
   0345 CDr00r00      [17]  452 	call	_cpct_px2byteM1
   0348 F1            [10]  453 	pop	af
   0349 F1            [10]  454 	pop	af
   034A 55            [ 4]  455 	ld	d,l
   034B C1            [10]  456 	pop	bc
   034C C5            [11]  457 	push	bc
   034D 21 16 31      [10]  458 	ld	hl,#0x3116
   0350 E5            [11]  459 	push	hl
   0351 D5            [11]  460 	push	de
   0352 33            [ 6]  461 	inc	sp
   0353 C5            [11]  462 	push	bc
   0354 CDr00r00      [17]  463 	call	_cpct_drawSolidBox
   0357 F1            [10]  464 	pop	af
   0358 F1            [10]  465 	pop	af
   0359 33            [ 6]  466 	inc	sp
   035A C1            [10]  467 	pop	bc
                            468 ;src/Menus.c:70: cpct_drawStringM1("Muevete con W,A,S,D", memPtr, 3, 1);
   035B 11rABr03      [10]  469 	ld	de,#___str_11
   035E 21 03 01      [10]  470 	ld	hl,#0x0103
   0361 E5            [11]  471 	push	hl
   0362 C5            [11]  472 	push	bc
   0363 D5            [11]  473 	push	de
   0364 CDr00r00      [17]  474 	call	_cpct_drawStringM1
   0367 21 06 00      [10]  475 	ld	hl,#6
   036A 39            [11]  476 	add	hl,sp
   036B F9            [ 6]  477 	ld	sp,hl
                            478 ;src/Menus.c:71: memPtr=cpct_getScreenPtr(video_memory_start,4,8*13);
   036C ED 5Br00r00   [20]  479 	ld	de,(_video_memory_start)
   0370 21 04 68      [10]  480 	ld	hl,#0x6804
   0373 E5            [11]  481 	push	hl
   0374 D5            [11]  482 	push	de
   0375 CDr00r00      [17]  483 	call	_cpct_getScreenPtr
                            484 ;src/Menus.c:72: cpct_drawStringM1("Golpea con K", memPtr, 3, 1);
   0378 4D            [ 4]  485 	ld	c, l
   0379 44            [ 4]  486 	ld	b, h
   037A 11rBFr03      [10]  487 	ld	de,#___str_12
   037D 21 03 01      [10]  488 	ld	hl,#0x0103
   0380 E5            [11]  489 	push	hl
   0381 C5            [11]  490 	push	bc
   0382 D5            [11]  491 	push	de
   0383 CDr00r00      [17]  492 	call	_cpct_drawStringM1
   0386 21 06 00      [10]  493 	ld	hl,#6
   0389 39            [11]  494 	add	hl,sp
   038A F9            [ 6]  495 	ld	sp,hl
                            496 ;src/Menus.c:73: memPtr=cpct_getScreenPtr(video_memory_start,4,120);
   038B ED 5Br00r00   [20]  497 	ld	de,(_video_memory_start)
   038F 21 04 78      [10]  498 	ld	hl,#0x7804
   0392 E5            [11]  499 	push	hl
   0393 D5            [11]  500 	push	de
   0394 CDr00r00      [17]  501 	call	_cpct_getScreenPtr
                            502 ;src/Menus.c:74: cpct_drawStringM1("Pulsa 5 para volver al menu principal", memPtr, 3, 1);
   0397 4D            [ 4]  503 	ld	c, l
   0398 44            [ 4]  504 	ld	b, h
   0399 11rCCr03      [10]  505 	ld	de,#___str_13
   039C 21 03 01      [10]  506 	ld	hl,#0x0103
   039F E5            [11]  507 	push	hl
   03A0 C5            [11]  508 	push	bc
   03A1 D5            [11]  509 	push	de
   03A2 CDr00r00      [17]  510 	call	_cpct_drawStringM1
   03A5 21 06 00      [10]  511 	ld	hl,#6
   03A8 39            [11]  512 	add	hl,sp
   03A9 F9            [ 6]  513 	ld	sp,hl
   03AA C9            [10]  514 	ret
   03AB                     515 ___str_11:
   03AB 4D 75 65 76 65 74   516 	.ascii "Muevete con W,A,S,D"
        65 20 63 6F 6E 20
        57 2C 41 2C 53 2C
        44
   03BE 00                  517 	.db 0x00
   03BF                     518 ___str_12:
   03BF 47 6F 6C 70 65 61   519 	.ascii "Golpea con K"
        20 63 6F 6E 20 4B
   03CB 00                  520 	.db 0x00
   03CC                     521 ___str_13:
   03CC 50 75 6C 73 61 20   522 	.ascii "Pulsa 5 para volver al menu principal"
        35 20 70 61 72 61
        20 76 6F 6C 76 65
        72 20 61 6C 20 6D
        65 6E 75 20 70 72
        69 6E 63 69 70 61
        6C
   03F1 00                  523 	.db 0x00
                            524 	.area _CODE
                            525 	.area _INITIALIZER
                            526 	.area _CABS (ABS)
