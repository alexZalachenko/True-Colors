                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 23 2015) (CYGWIN)
                              4 ; This file was generated Fri Oct 23 22:08:17 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _ActualizarArr
                             14 	.globl _recibirDanyo
                             15 	.globl _generaEnemigos
                             16 	.globl _pintaEnemigos
                             17 	.globl _pintaPersonaje
                             18 	.globl _muevePersonaje
                             19 	.globl _desactualizar
                             20 	.globl _iniciaHud
                             21 	.globl _pintaVida
                             22 	.globl _menuInicio
                             23 	.globl _pintarEscenario
                             24 	.globl _malloc
                             25 	.globl _cpct_setRandomSeedUniform_u8
                             26 	.globl _cpct_getScreenPtr
                             27 	.globl _cpct_setPalette
                             28 	.globl _cpct_fw2hw
                             29 	.globl _cpct_waitVSYNC
                             30 	.globl _cpct_setVideoMode
                             31 	.globl _cpct_disableFirmware
                             32 	.globl _init
                             33 	.globl _pintarElementos
                             34 ;--------------------------------------------------------
                             35 ; special function registers
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DATA
                             41 ;--------------------------------------------------------
                             42 ; ram data
                             43 ;--------------------------------------------------------
                             44 	.area _INITIALIZED
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area _DABS (ABS)
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _GSINIT
                             54 	.area _GSFINAL
                             55 	.area _GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _HOME
                             60 	.area _HOME
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area _CODE
                             65 ;src/main.c:30: int main(void) {
                             66 ;	---------------------------------
                             67 ; Function main
                             68 ; ---------------------------------
   0000                      69 _main::
   0000 DD E5         [15]   70 	push	ix
   0002 DD 21 00 00   [14]   71 	ld	ix,#0
   0006 DD 39         [15]   72 	add	ix,sp
   0008 21 F6 FF      [10]   73 	ld	hl,#-10
   000B 39            [11]   74 	add	hl,sp
   000C F9            [ 6]   75 	ld	sp,hl
                             76 ;src/main.c:32: personaje *protagonista=(personaje *)malloc(sizeof(personaje));
   000D 21 0D 00      [10]   77 	ld	hl,#0x000D
   0010 E5            [11]   78 	push	hl
   0011 CDr00r00      [17]   79 	call	_malloc
                             80 ;src/main.c:33: estadoTeclado *teclado=(estadoTeclado *)malloc(sizeof(estadoTeclado));
   0014 E3            [19]   81 	ex	(sp),hl
   0015 21 05 00      [10]   82 	ld	hl,#0x0005
   0018 E5            [11]   83 	push	hl
   0019 CDr00r00      [17]   84 	call	_malloc
   001C F1            [10]   85 	pop	af
   001D C1            [10]   86 	pop	bc
   001E DD 75 FC      [19]   87 	ld	-4 (ix),l
   0021 DD 74 FD      [19]   88 	ld	-3 (ix),h
                             89 ;src/main.c:35: cpct_disableFirmware();
   0024 C5            [11]   90 	push	bc
   0025 CDr00r00      [17]   91 	call	_cpct_disableFirmware
   0028 3E 01         [ 7]   92 	ld	a,#0x01
   002A F5            [11]   93 	push	af
   002B 33            [ 6]   94 	inc	sp
   002C CDr00r00      [17]   95 	call	_cpct_setVideoMode
   002F 33            [ 6]   96 	inc	sp
   0030 C1            [10]   97 	pop	bc
                             98 ;src/main.c:37: cpct_fw2hw(paleta,4);
   0031 11r00r00      [10]   99 	ld	de,#_paleta
   0034 C5            [11]  100 	push	bc
   0035 3E 04         [ 7]  101 	ld	a,#0x04
   0037 F5            [11]  102 	push	af
   0038 33            [ 6]  103 	inc	sp
   0039 D5            [11]  104 	push	de
   003A CDr00r00      [17]  105 	call	_cpct_fw2hw
   003D F1            [10]  106 	pop	af
   003E 33            [ 6]  107 	inc	sp
   003F C1            [10]  108 	pop	bc
                            109 ;src/main.c:38: cpct_setPalette(paleta, 4);
   0040 11r00r00      [10]  110 	ld	de,#_paleta
   0043 C5            [11]  111 	push	bc
   0044 3E 04         [ 7]  112 	ld	a,#0x04
   0046 F5            [11]  113 	push	af
   0047 33            [ 6]  114 	inc	sp
   0048 D5            [11]  115 	push	de
   0049 CDr00r00      [17]  116 	call	_cpct_setPalette
   004C F1            [10]  117 	pop	af
   004D 33            [ 6]  118 	inc	sp
   004E 2E 07         [ 7]  119 	ld	l,#0x07
   0050 CDr00r00      [17]  120 	call	_cpct_setRandomSeedUniform_u8
   0053 CDr00r00      [17]  121 	call	_menuInicio
   0056 C1            [10]  122 	pop	bc
                            123 ;src/main.c:42: init(protagonista, enemigosSala);//INICIA LOS DATOS DEL JUEGO
   0057 21 00 00      [10]  124 	ld	hl,#0x0000
   005A 39            [11]  125 	add	hl,sp
   005B DD 75 FE      [19]  126 	ld	-2 (ix),l
   005E DD 74 FF      [19]  127 	ld	-1 (ix),h
   0061 DD 6E FE      [19]  128 	ld	l,-2 (ix)
   0064 DD 66 FF      [19]  129 	ld	h,-1 (ix)
   0067 C5            [11]  130 	push	bc
   0068 E5            [11]  131 	push	hl
   0069 C5            [11]  132 	push	bc
   006A CDrF3r00      [17]  133 	call	_init
   006D F1            [10]  134 	pop	af
   006E F1            [10]  135 	pop	af
   006F C1            [10]  136 	pop	bc
                            137 ;src/main.c:44: while (1){
   0070                     138 00104$:
                            139 ;src/main.c:45: cpct_waitVSYNC();
   0070 C5            [11]  140 	push	bc
   0071 CDr00r00      [17]  141 	call	_cpct_waitVSYNC
   0074 C1            [10]  142 	pop	bc
                            143 ;src/main.c:46: muevePersonaje(protagonista,teclado);
   0075 C5            [11]  144 	push	bc
   0076 DD 6E FC      [19]  145 	ld	l,-4 (ix)
   0079 DD 66 FD      [19]  146 	ld	h,-3 (ix)
   007C E5            [11]  147 	push	hl
   007D C5            [11]  148 	push	bc
   007E CDr00r00      [17]  149 	call	_muevePersonaje
   0081 F1            [10]  150 	pop	af
   0082 F1            [10]  151 	pop	af
   0083 C1            [10]  152 	pop	bc
                            153 ;src/main.c:47: recibirDanyo(enemigosSala, protagonista);
   0084 DD 6E FE      [19]  154 	ld	l,-2 (ix)
   0087 DD 66 FF      [19]  155 	ld	h,-1 (ix)
   008A C5            [11]  156 	push	bc
   008B C5            [11]  157 	push	bc
   008C E5            [11]  158 	push	hl
   008D CDr00r00      [17]  159 	call	_recibirDanyo
   0090 F1            [10]  160 	pop	af
   0091 F1            [10]  161 	pop	af
   0092 C1            [10]  162 	pop	bc
                            163 ;src/main.c:48: ActualizarArr(enemigosSala, protagonista);
   0093 DD 6E FE      [19]  164 	ld	l,-2 (ix)
   0096 DD 66 FF      [19]  165 	ld	h,-1 (ix)
   0099 C5            [11]  166 	push	bc
   009A C5            [11]  167 	push	bc
   009B E5            [11]  168 	push	hl
   009C CDr00r00      [17]  169 	call	_ActualizarArr
   009F F1            [10]  170 	pop	af
   00A0 F1            [10]  171 	pop	af
   00A1 C1            [10]  172 	pop	bc
                            173 ;src/main.c:49: if(protagonista->generaEnemigos){
   00A2 21 0A 00      [10]  174 	ld	hl,#0x000A
   00A5 09            [11]  175 	add	hl,bc
   00A6 5D            [ 4]  176 	ld	e,l
   00A7 54            [ 4]  177 	ld	d,h
   00A8 1A            [ 7]  178 	ld	a,(de)
   00A9 B7            [ 4]  179 	or	a, a
   00AA 28 26         [12]  180 	jr	Z,00102$
                            181 ;src/main.c:50: generaEnemigos(protagonista->salaActual, enemigosSala);
   00AC DD 6E FE      [19]  182 	ld	l,-2 (ix)
   00AF DD 66 FF      [19]  183 	ld	h,-1 (ix)
   00B2 E5            [11]  184 	push	hl
   00B3 FD E1         [14]  185 	pop	iy
   00B5 69            [ 4]  186 	ld	l, c
   00B6 60            [ 4]  187 	ld	h, b
   00B7 C5            [11]  188 	push	bc
   00B8 01 06 00      [10]  189 	ld	bc, #0x0006
   00BB 09            [11]  190 	add	hl, bc
   00BC C1            [10]  191 	pop	bc
   00BD 66            [ 7]  192 	ld	h,(hl)
   00BE C5            [11]  193 	push	bc
   00BF D5            [11]  194 	push	de
   00C0 FD E5         [15]  195 	push	iy
   00C2 E5            [11]  196 	push	hl
   00C3 33            [ 6]  197 	inc	sp
   00C4 CDr00r00      [17]  198 	call	_generaEnemigos
   00C7 F1            [10]  199 	pop	af
   00C8 33            [ 6]  200 	inc	sp
   00C9 D1            [10]  201 	pop	de
   00CA C1            [10]  202 	pop	bc
                            203 ;src/main.c:51: protagonista->generaEnemigos=0;
   00CB AF            [ 4]  204 	xor	a, a
   00CC 12            [ 7]  205 	ld	(de),a
                            206 ;src/main.c:52: desactualizar();
   00CD C5            [11]  207 	push	bc
   00CE CDr00r00      [17]  208 	call	_desactualizar
   00D1 C1            [10]  209 	pop	bc
   00D2                     210 00102$:
                            211 ;src/main.c:55: cpct_waitVSYNC();
   00D2 C5            [11]  212 	push	bc
   00D3 CDr00r00      [17]  213 	call	_cpct_waitVSYNC
   00D6 C1            [10]  214 	pop	bc
                            215 ;src/main.c:56: pintarElementos(protagonista,teclado,enemigosSala);
   00D7 DD 6E FE      [19]  216 	ld	l,-2 (ix)
   00DA DD 66 FF      [19]  217 	ld	h,-1 (ix)
   00DD C5            [11]  218 	push	bc
   00DE E5            [11]  219 	push	hl
   00DF DD 6E FC      [19]  220 	ld	l,-4 (ix)
   00E2 DD 66 FD      [19]  221 	ld	h,-3 (ix)
   00E5 E5            [11]  222 	push	hl
   00E6 C5            [11]  223 	push	bc
   00E7 CDrA4r01      [17]  224 	call	_pintarElementos
   00EA 21 06 00      [10]  225 	ld	hl,#6
   00ED 39            [11]  226 	add	hl,sp
   00EE F9            [ 6]  227 	ld	sp,hl
   00EF C1            [10]  228 	pop	bc
   00F0 C3r70r00      [10]  229 	jp	00104$
                            230 ;src/main.c:60: void init(personaje *p, enemigo* arr[]){
                            231 ;	---------------------------------
                            232 ; Function init
                            233 ; ---------------------------------
   00F3                     234 _init::
   00F3 DD E5         [15]  235 	push	ix
   00F5 DD 21 00 00   [14]  236 	ld	ix,#0
   00F9 DD 39         [15]  237 	add	ix,sp
   00FB F5            [11]  238 	push	af
   00FC F5            [11]  239 	push	af
                            240 ;src/main.c:65: p->x=16;
   00FD DD 5E 04      [19]  241 	ld	e,4 (ix)
   0100 DD 56 05      [19]  242 	ld	d,5 (ix)
   0103 6B            [ 4]  243 	ld	l, e
   0104 62            [ 4]  244 	ld	h, d
   0105 36 10         [10]  245 	ld	(hl),#0x10
   0107 23            [ 6]  246 	inc	hl
   0108 36 00         [10]  247 	ld	(hl),#0x00
                            248 ;src/main.c:66: p->y=16;
   010A 4B            [ 4]  249 	ld	c, e
   010B 42            [ 4]  250 	ld	b, d
   010C 03            [ 6]  251 	inc	bc
   010D 03            [ 6]  252 	inc	bc
   010E 3E 10         [ 7]  253 	ld	a,#0x10
   0110 02            [ 7]  254 	ld	(bc),a
                            255 ;src/main.c:67: p->vida=5;
   0111 6B            [ 4]  256 	ld	l, e
   0112 62            [ 4]  257 	ld	h, d
   0113 23            [ 6]  258 	inc	hl
   0114 23            [ 6]  259 	inc	hl
   0115 23            [ 6]  260 	inc	hl
   0116 36 05         [10]  261 	ld	(hl),#0x05
                            262 ;src/main.c:68: p->tipoSprite=2;
   0118 21 04 00      [10]  263 	ld	hl,#0x0004
   011B 19            [11]  264 	add	hl,de
   011C 36 02         [10]  265 	ld	(hl),#0x02
                            266 ;src/main.c:69: p->cambiarPaso=0;
   011E 21 05 00      [10]  267 	ld	hl,#0x0005
   0121 19            [11]  268 	add	hl,de
   0122 36 00         [10]  269 	ld	(hl),#0x00
                            270 ;src/main.c:70: p->salaActual=0;
   0124 21 06 00      [10]  271 	ld	hl,#0x0006
   0127 19            [11]  272 	add	hl,de
   0128 DD 75 FE      [19]  273 	ld	-2 (ix),l
   012B DD 74 FF      [19]  274 	ld	-1 (ix),h
   012E DD 6E FE      [19]  275 	ld	l,-2 (ix)
   0131 DD 66 FF      [19]  276 	ld	h,-1 (ix)
   0134 36 00         [10]  277 	ld	(hl),#0x00
                            278 ;src/main.c:71: p->atacando=0;
   0136 21 07 00      [10]  279 	ld	hl,#0x0007
   0139 19            [11]  280 	add	hl,de
   013A 36 00         [10]  281 	ld	(hl),#0x00
                            282 ;src/main.c:72: p->cansancioAtaque=0;
   013C 21 08 00      [10]  283 	ld	hl,#0x0008
   013F 19            [11]  284 	add	hl,de
   0140 36 00         [10]  285 	ld	(hl),#0x00
                            286 ;src/main.c:73: p->ataquePreparado=1;
   0142 21 09 00      [10]  287 	ld	hl,#0x0009
   0145 19            [11]  288 	add	hl,de
   0146 36 01         [10]  289 	ld	(hl),#0x01
                            290 ;src/main.c:74: p->generaEnemigos=0;
   0148 21 0A 00      [10]  291 	ld	hl,#0x000A
   014B 19            [11]  292 	add	hl,de
   014C 36 00         [10]  293 	ld	(hl),#0x00
                            294 ;src/main.c:75: p->memPtr=cpct_getScreenPtr(video_memory_start,p->x/4,p->y);
   014E 21 0B 00      [10]  295 	ld	hl,#0x000B
   0151 19            [11]  296 	add	hl,de
   0152 E3            [19]  297 	ex	(sp), hl
   0153 0A            [ 7]  298 	ld	a,(bc)
   0154 47            [ 4]  299 	ld	b,a
   0155 EB            [ 4]  300 	ex	de,hl
   0156 5E            [ 7]  301 	ld	e,(hl)
   0157 23            [ 6]  302 	inc	hl
   0158 56            [ 7]  303 	ld	d,(hl)
   0159 6B            [ 4]  304 	ld	l, e
   015A 62            [ 4]  305 	ld	h, d
   015B CB 7A         [ 8]  306 	bit	7, d
   015D 28 04         [12]  307 	jr	Z,00103$
   015F EB            [ 4]  308 	ex	de,hl
   0160 23            [ 6]  309 	inc	hl
   0161 23            [ 6]  310 	inc	hl
   0162 23            [ 6]  311 	inc	hl
   0163                     312 00103$:
   0163 CB 2C         [ 8]  313 	sra	h
   0165 CB 1D         [ 8]  314 	rr	l
   0167 CB 2C         [ 8]  315 	sra	h
   0169 CB 1D         [ 8]  316 	rr	l
   016B 4D            [ 4]  317 	ld	c,l
   016C ED 5Br00r00   [20]  318 	ld	de,(_video_memory_start)
   0170 C5            [11]  319 	push	bc
   0171 D5            [11]  320 	push	de
   0172 CDr00r00      [17]  321 	call	_cpct_getScreenPtr
   0175 55            [ 4]  322 	ld	d,l
   0176 5C            [ 4]  323 	ld	e,h
   0177 E1            [10]  324 	pop	hl
   0178 E5            [11]  325 	push	hl
   0179 72            [ 7]  326 	ld	(hl),d
   017A 23            [ 6]  327 	inc	hl
   017B 73            [ 7]  328 	ld	(hl),e
                            329 ;src/main.c:76: iniciaHud();
   017C CDr00r00      [17]  330 	call	_iniciaHud
                            331 ;src/main.c:77: pintarEscenario(p->salaActual);
   017F DD 6E FE      [19]  332 	ld	l,-2 (ix)
   0182 DD 66 FF      [19]  333 	ld	h,-1 (ix)
   0185 66            [ 7]  334 	ld	h,(hl)
   0186 E5            [11]  335 	push	hl
   0187 33            [ 6]  336 	inc	sp
   0188 CDr00r00      [17]  337 	call	_pintarEscenario
   018B 33            [ 6]  338 	inc	sp
                            339 ;src/main.c:78: generaEnemigos(p->salaActual, arr);
   018C DD 6E FE      [19]  340 	ld	l,-2 (ix)
   018F DD 66 FF      [19]  341 	ld	h,-1 (ix)
   0192 66            [ 7]  342 	ld	h,(hl)
   0193 DD 4E 06      [19]  343 	ld	c,6 (ix)
   0196 DD 46 07      [19]  344 	ld	b,7 (ix)
   0199 C5            [11]  345 	push	bc
   019A E5            [11]  346 	push	hl
   019B 33            [ 6]  347 	inc	sp
   019C CDr00r00      [17]  348 	call	_generaEnemigos
   019F DD F9         [10]  349 	ld	sp,ix
   01A1 DD E1         [14]  350 	pop	ix
   01A3 C9            [10]  351 	ret
                            352 ;src/main.c:81: void pintarElementos(personaje *p,estadoTeclado *t, enemigo* arr[]){
                            353 ;	---------------------------------
                            354 ; Function pintarElementos
                            355 ; ---------------------------------
   01A4                     356 _pintarElementos::
                            357 ;src/main.c:82: pintaVida();
   01A4 CDr00r00      [17]  358 	call	_pintaVida
                            359 ;src/main.c:83: pintaPersonaje(p,t);
   01A7 21 04 00      [10]  360 	ld	hl, #4
   01AA 39            [11]  361 	add	hl, sp
   01AB 4E            [ 7]  362 	ld	c, (hl)
   01AC 23            [ 6]  363 	inc	hl
   01AD 46            [ 7]  364 	ld	b, (hl)
   01AE C5            [11]  365 	push	bc
   01AF 21 04 00      [10]  366 	ld	hl, #4
   01B2 39            [11]  367 	add	hl, sp
   01B3 4E            [ 7]  368 	ld	c, (hl)
   01B4 23            [ 6]  369 	inc	hl
   01B5 46            [ 7]  370 	ld	b, (hl)
   01B6 C5            [11]  371 	push	bc
   01B7 CDr00r00      [17]  372 	call	_pintaPersonaje
   01BA F1            [10]  373 	pop	af
   01BB F1            [10]  374 	pop	af
                            375 ;src/main.c:84: pintaEnemigos(arr);
   01BC 21 06 00      [10]  376 	ld	hl, #6
   01BF 39            [11]  377 	add	hl, sp
   01C0 4E            [ 7]  378 	ld	c, (hl)
   01C1 23            [ 6]  379 	inc	hl
   01C2 46            [ 7]  380 	ld	b, (hl)
   01C3 C5            [11]  381 	push	bc
   01C4 CDr00r00      [17]  382 	call	_pintaEnemigos
   01C7 F1            [10]  383 	pop	af
   01C8 C9            [10]  384 	ret
                            385 	.area _CODE
                            386 	.area _INITIALIZER
                            387 	.area _CABS (ABS)
